# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.3-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
        environment:
          BUNDLER_VERSION: 2.0.2
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: user
          POSTGRES_DB: bbb_demo_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            yarn install --check-files
            RAILS_ENV="test bundle exec rspec -r rspec_junit_formatter --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec/junit.xml"
            sudo apt install -y postgresql-client || true

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # - run:
      #     name: Database setup
      #     command: |
      #       bundle exec rake db:create
      #       # bundle exec rake db:schema:load
      #     environment:
      #       DATABASE_URL: "postgres://user@localhost:5432/bbb_demo_test"

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bin/rails spec/features/*.rb

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
